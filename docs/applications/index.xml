<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Memoria Applications on</title><link>https://memoria-framework.dev/docs/applications/</link><description>Recent content in Memoria Applications on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 29 Mar 2024 08:48:23 +0000</lastBuildDate><atom:link href="https://memoria-framework.dev/docs/applications/index.xml" rel="self" type="application/rss+xml"/><item><title>Hybrid AI</title><link>https://memoria-framework.dev/docs/applications/aiml/</link><pubDate>Fri, 29 Mar 2024 02:07:01 -0400</pubDate><guid>https://memoria-framework.dev/docs/applications/aiml/</guid><description/></item><item><title>Computational Storage</title><link>https://memoria-framework.dev/docs/applications/storage/</link><pubDate>Fri, 29 Mar 2024 02:07:01 -0400</pubDate><guid>https://memoria-framework.dev/docs/applications/storage/</guid><description/></item><item><title>Converged Databases</title><link>https://memoria-framework.dev/docs/applications/db/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://memoria-framework.dev/docs/applications/db/</guid><description/></item><item><title>HW/SW Co-design</title><link>https://memoria-framework.dev/docs/applications/co-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://memoria-framework.dev/docs/applications/co-design/</guid><description>Basic information By hardware/software co-design we mean a system design process when, given some functionality, we have a choice to implement it in hardware or in software. Actually, there are not that much of substantial difference between those two options, the problem is that corresponding engineering practices are very different. Co-design framework aims to align them to each other and, if possible, unify into a single seamless super-process.
We have practically successful examples of existing co-design frameworks &amp;ndash; neural networks-oriented opensource ML frameworks (PyTorch, Tensorflow and others) support using custom designed hardware to accelerate computational graphs.</description></item><item><title>Embedded and IoT Applications</title><link>https://memoria-framework.dev/docs/applications/eiot/</link><pubDate>Fri, 29 Mar 2024 02:07:01 -0400</pubDate><guid>https://memoria-framework.dev/docs/applications/eiot/</guid><description/></item></channel></rss>